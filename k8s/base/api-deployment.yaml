apiVersion: apps/v1
kind: Deployment
metadata:
  name: yolo-api
  labels:
    app: yolo-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: yolo-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: yolo-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: api
        image: ${API_IMAGE}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: API_DEBUG
          valueFrom:
            configMapKeyRef:
              name: yolo-api-config
              key: API_DEBUG
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: yolo-api-config
              key: LOG_LEVEL
        - name: MODEL_DEVICE
          valueFrom:
            configMapKeyRef:
              name: yolo-api-config
              key: MODEL_DEVICE
        - name: MODEL_NAME
          valueFrom:
            configMapKeyRef:
              name: yolo-api-config
              key: MODEL_NAME
        - name: ULTRALYTICS_SKIP_TORCH_WEIGHTS_WARNING
          value: "1"
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        volumeMounts:
        - name: uploads
          mountPath: /tmp/uploads
        - name: model-cache
          mountPath: /root/.cache/torch
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 12
        command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: yolo-api-uploads-pvc
      - name: model-cache
        emptyDir: {}